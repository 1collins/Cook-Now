<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Unico Kitchen — Recipes, Shop & Gas</title>
<style>
  :root{--accent:#ff6b35;--muted:#666;--bg:#fafafa}
  *{box-sizing:border-box}
  body{margin:0;font-family:Arial,system-ui,sans-serif;background:var(--bg);color:#111}
  header{background:#fff;padding:12px;box-shadow:0 2px 8px rgba(0,0,0,.06);position:sticky;top:0;z-index:60}
  .container{max-width:1000px;margin:0 auto;padding:12px}
  .header-row{display:flex;align-items:center;gap:12px}
  .brand{font-weight:800;color:var(--accent);font-size:18px}
  .tabs{margin-left:20px;display:flex;gap:8px}
  .tab{padding:8px 10px;border-radius:8px;cursor:pointer}
  .tab.active{background:#fff;border:1px solid #eee;box-shadow:0 2px 8px rgba(0,0,0,.04)}
  .actions{margin-left:auto;display:flex;gap:8px;align-items:center}
  .count{background:var(--accent);color:#fff;padding:6px 10px;border-radius:999px;font-weight:700}
  button{cursor:pointer;border:none;padding:8px 10px;border-radius:8px;background:var(--accent);color:#fff}
  .ghost{background:#fff;color:#111;border:1px solid #eee}
  main{padding:18px}
  .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(260px,1fr));gap:12px}
  .card{background:#fff;padding:12px;border-radius:10px;box-shadow:0 4px 18px rgba(0,0,0,.04)}
  .card img{width:100%;height:150px;object-fit:cover;border-radius:8px}
  .buttons{display:flex;gap:8px;flex-wrap:wrap;margin-top:8px}
  .hidden{display:none}
  .shop-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(180px,1fr));gap:12px}
  .shop-item img{height:110px;width:100%;object-fit:cover;border-radius:8px}
  .cart-panel{position:fixed;right:16px;bottom:16px;background:#fff;padding:12px;border-radius:10px;box-shadow:0 14px 40px rgba(0,0,0,.12);width:320px;max-height:70vh;overflow:auto;z-index:70}
  .ingredient-row{display:flex;justify-content:space-between;align-items:center;padding:6px 0;border-bottom:1px dashed #f0f0f0}
  footer{padding:16px;text-align:center;color:var(--muted);font-size:13px}
  input[type=number]{padding:6px;border:1px solid #eee;border-radius:6px}
  small.note{color:var(--muted);display:block;margin-top:6px}
  .meta { color:var(--muted); font-size:13px; margin-top:6px }
  @media (max-width:720px){ .grid{grid-template-columns:1fr} .tabs{display:flex;gap:6px;overflow:auto;padding-bottom:6px} .cart-panel{width:92%;right:4%} }
</style>
</head>
<body>

<header>
  <div class="container header-row">
    <div style="display:flex;align-items:center;gap:12px">
      <img id="logo" src="https://images.unsplash.com/photo-1544025162-d76694265947?w=800&q=60" alt="logo" style="width:56px;height:56px;border-radius:10px;object-fit:cover">
      <div>
        <div class="brand">Unico Kitchen</div>
        <small class="note">You cook — we follow (recipes, shop & gas)</small>
      </div>
    </div>

    <nav class="tabs" id="navTabs" aria-label="Main tabs">
      <div class="tab active" data-tab="recipes">Recipes</div>
      <div class="tab" data-tab="shop">Shop</div>
      <div class="tab" data-tab="gas">Gas</div>
      <div class="tab" data-tab="fridge">Fridge</div>
    </nav>

    <div class="actions">
      <div id="cartCount" class="count">0</div>
      <button id="openCartBtn" class="ghost">Cart</button>
      <button id="sendOrderHeader" class="ghost">Send Order</button>
      <button id="sendPlanHeader" class="ghost">Send Plan</button>
    </div>
  </div>
</header>

<main class="container">
  <!-- RECIPES -->
  <section id="recipes" class="tab-panel">
    <h2>All Recipes</h2>
    <small class="note">Click "Cook (WhatsApp)" to send a friendly recipe message (no prices).</small>
    <div id="recipesGrid" class="grid" style="margin-top:12px"></div>
  </section>

  <!-- SHOP -->
  <section id="shop" class="tab-panel hidden">
    <h2>Shop</h2>
    <small class="note">Add shop items (priced) to the cart; "Save" stores an ingredient to your Fridge.</small>
    <div id="shopGrid" class="shop-grid" style="margin-top:12px"></div>
  </section>

  <!-- GAS -->
  <section id="gas" class="tab-panel hidden">
    <h2>Gas Tokens</h2>
    <div style="background:#fff;padding:12px;border-radius:8px">
      <p class="note">Each gas token = 1 minute. Edit minutes per recipe in the recipes array.</p>
      <div style="display:flex;gap:10px;align-items:center;flex-wrap:wrap">
        <label>Tokens: <input id="gasQty" type="number" min="1" value="1" style="width:80px"></label>
        <div>Price/token: <strong id="tokenPrice">50</strong> KES</div>
        <button id="addGas">Add</button>
      </div>
      <div style="margin-top:8px">Estimated: <strong id="gasTotal">50</strong> KES</div>
    </div>
  </section>

  <!-- FRIDGE -->
  <section id="fridge" class="tab-panel hidden">
    <h2>Your Fridge</h2>
    <small class="note">Saved ingredients (no prices). Click "View in shop" to jump to the shop item.</small>
    <div id="fridgeList" style="margin-top:12px"></div>
  </section>
</main>

<!-- CART PANEL -->
<div id="cartPanel" class="cart-panel" style="display:none" aria-live="polite">
  <h3 style="margin:0 0 8px">Cart</h3>
  <div id="cartItems"></div>
  <div style="margin-top:12px;display:flex;justify-content:space-between;align-items:center">
    <div><strong>Total:</strong> <span id="cartTotal">0</span> KES</div>
    <div style="display:flex;gap:8px">
      <button id="clearCart" class="ghost">Clear</button>
      <button id="sendCart">Send Order</button>
    </div>
  </div>
</div>

<footer>Built for Unico Kitchen — edit logo, phone, recipes and shop items in the JS below.</footer>

<script>
/* ============= CONFIG =============
   Edit only these values as requested
   PHONE: your WhatsApp number in international format without +.
   You told me: 0798459336 -> international is 254798459336 (used for wa.me links).
*/
const CONFIG = {
  PHONE: '254798459336',   // WhatsApp number (international, no +)
  TOKEN_PRICE: 50          // KES per token/minute
};

/* ============= DATA =============
   Recipes now include minutes (editable).
   Shop and other arrays remain constant unless you edit them here.
*/
const recipes = [
  {
    id: 'chicken-pilau',
    title: 'Chicken Pilau',
    minutes: 60,
    image: 'https://img-global.cpcdn.com/recipes/cefe9d01076b938b/300x426f0.5_0.56875_1.0q80/chicken-pilau-recipe-main-photo.webp',
    ingredients: [
      { name: '3 cups basmati rice', shopId: 'rice1' },
      { name: '2 tbs pilau masala', shopId: 'pilau-spice' },
      { name: 'Onions', shopId: 'onion1' },
      { name: 'Salt', shopId: 'salt1' },
      { name: 'Garlic ginger paste', shopId: 'garlic1' },
      { name: '6 cups hot water' },
      { name: '2 kg chicken pieces', shopId: 'chicken1' }
    ],
    steps: [
      'Fry onions until dark brown (keep stirring).',
      'Add garlic-ginger paste and spices; stir until fragrant.',
      'Mix in chicken, then rice & water; simmer until done.'
    ]
  },
  {
    id: 'ugali',
    title: 'Ugali (Maize meal)',
    minutes: 15,
    image: 'https://images.unsplash.com/photo-1564758866810-0d9b3e3b2b20?w=1200&q=60',
    ingredients: [
      { name:'2 cups maize flour', shopId:'maize1' },
      { name:'4 cups water' },
      { name:'Salt', shopId:'salt1' }
    ],
    steps: ['Boil water with salt.', 'Add maize flour slowly while stirring.', 'Cook until firm and serve.']
  },
  {
    id: 'chapati',
    title: 'Chapati',
    minutes: 40,
    image: 'https://images.unsplash.com/photo-1604908177522-7c2c9fa0d6c3?w=1200&q=60',
    ingredients: [{ name:'2 cups flour', shopId:'flour1' }, { name:'Water' }, { name:'Oil', shopId:'oil1' }],
    steps: ['Make soft dough, rest, roll thin and cook on a hot skillet.']
  },
  {
    id: 'indomie',
    title: 'Indomie (instant noodles)',
    minutes: 5,
    image: 'https://images.unsplash.com/photo-1586816005257-8b6f50b2f2b0?w=1200&q=60',
    ingredients: [{ name:'1 packet noodles', shopId:'noodles1' }, { name:'Optional veg', shopId:'veg1' }],
    steps: ['Boil noodles 2 minutes, stir-fry with veg, serve hot.']
  }
];

const shopItems = [
  { id:'rice1', name:'Basmati Rice 2kg', price:200, image:'https://images.unsplash.com/photo-1604908177522-7c2c9fa0d6c3?w=800&q=60' },
  { id:'pilau-spice', name:'Pilau Masala 100g', price:60, image:'https://images.unsplash.com/photo-1543353071-873f17a7a088?w=800&q=60' },
  { id:'onion1', name:'Onions 1kg', price:60, image:'https://images.unsplash.com/photo-1587300003388-59208cc962cb?w=800&q=60' },
  { id:'salt1', name:'Salt 1kg', price:30, image:'https://images.unsplash.com/photo-1585238342028-7c6a3c6e0a0f?w=800&q=60' },
  { id:'garlic1', name:'Garlic paste 200g', price:80, image:'https://images.unsplash.com/photo-1543353071-873f17a7a088?w=800&q=60' },
  { id:'chicken1', name:'Chicken 1kg', price:450, image:'https://images.unsplash.com/photo-1544025162-d76694265947?w=800&q=60' },
  { id:'maize1', name:'Maize meal 2kg', price:150, image:'https://images.unsplash.com/photo-1601004890684-d8cbf643f5f2?w=800&q=60' },
  { id:'flour1', name:'All-purpose flour 2kg', price:220, image:'https://images.unsplash.com/photo-1586201375761-83865001e7a5?w=800&q=60' },
  { id:'oil1', name:'Cooking oil 1L', price:350, image:'https://images.unsplash.com/photo-1580910051070-8a6c30a08a4a?w=800&q=60' },
  { id:'noodles1', name:'Instant noodles (1pc)', price:70, image:'https://images.unsplash.com/photo-1586816005257-8b6f50b2f2b0?w=800&q=60' },
  { id:'veg1', name:'Mixed veg 500g', price:120, image:'https://images.unsplash.com/photo-1506806732259-39c2d0268443?w=800&q=60' }
];

/* ============= STATE (localStorage) ============= */
const state = {
  cart: JSON.parse(localStorage.getItem('uk_cart') || '[]'),
  fridge: JSON.parse(localStorage.getItem('uk_fridge') || '[]'),
  planned: JSON.parse(localStorage.getItem('uk_planned') || '[]'),
  tokenPrice: Number(localStorage.getItem('uk_tokenPrice') || CONFIG.TOKEN_PRICE)
};

/* ============= HELPERS ============= */
function saveState(){
  localStorage.setItem('uk_cart', JSON.stringify(state.cart));
  localStorage.setItem('uk_fridge', JSON.stringify(state.fridge));
  localStorage.setItem('uk_planned', JSON.stringify(state.planned));
  localStorage.setItem('uk_tokenPrice', String(state.tokenPrice));
  renderCart(); renderFridge(); renderCartCount();
}
function findShopById(id){ return shopItems.find(s => s.id === id) }
function blink(el){ if(!el) return; el.classList.add('blink'); setTimeout(()=>el.classList.remove('blink'),900); }
function escapeHtml(text){ return String(text||'').replace(/[&<>"']/g, m=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }

/* ============= RENDER FUNCTIONS ============= */
function renderRecipes(){
  const el = document.getElementById('recipesGrid'); el.innerHTML = '';
  recipes.forEach(r=>{
    const card = document.createElement('div'); card.className='card';
    const ingHtml = r.ingredients.map(i=>`<div class="ingredient-row"><div>${escapeHtml(i.name)}</div><div>${i.shopId ? `<button class="ghost" onclick="addToFridge('${escapeHtml(i.name)}','${i.shopId}')">Save</button>` : ''}</div></div>`).join('');
    card.innerHTML = `
      <img src="${r.image}" alt="${escapeHtml(r.title)}">
      <h3>${escapeHtml(r.title)}</h3>
      <div class="meta">Estimated minutes: <strong>${escapeHtml(String(r.minutes || '—'))}</strong></div>
      <div class="buttons">
        <button class="ghost" onclick="toggleDetails('${r.id}')">View ingredients & steps</button>
        <button class="ghost" onclick="planRecipe('${r.id}', this)">Plan</button>
        <button onclick="sendRecipeWhatsApp('${r.id}', this)">Cook (WhatsApp)</button>
        <button class="ghost" onclick="addRecipeIngredientsToCart('${r.id}')">Add ingredients → Shop</button>
      </div>
      <div id="details-${r.id}" class="hidden" style="margin-top:10px">
        <strong>Ingredients</strong>
        ${ingHtml}
        <strong style="display:block;margin-top:8px">Steps</strong>
        <ol style="margin:6px 0 0 18px">${r.steps.map(s=>`<li>${escapeHtml(s)}</li>`).join('')}</ol>
      </div>
    `;
    el.appendChild(card);
  });
}

function renderShop(){
  const el = document.getElementById('shopGrid'); el.innerHTML = '';
  shopItems.forEach(s=>{
    const card = document.createElement('div'); card.className='card shop-item'; card.id = 'shop-' + s.id;
    card.innerHTML = `
      <img src="${s.image}" alt="${escapeHtml(s.name)}">
      <h4>${escapeHtml(s.name)}</h4>
      <div style="display:flex;justify-content:space-between;align-items:center;margin-top:8px">
        <div style="font-weight:700">KES ${s.price}</div>
        <div style="display:flex;gap:8px;align-items:center">
          <button class="ghost" onclick="addToFridge('${escapeHtml(s.name)}','${s.id}')">Save</button>
          <button onclick="addShopToCart('${s.id}', this)">Add to cart</button>
        </div>
      </div>
    `;
    el.appendChild(card);
  });
}

function renderFridge(){
  const el = document.getElementById('fridgeList'); el.innerHTML = '';
  if(state.fridge.length === 0){ el.innerHTML = '<div class="card">Your fridge is empty.</div>'; return; }
  state.fridge.forEach((f, idx)=>{
    const c = document.createElement('div'); c.className='card';
    c.innerHTML = `<div style="display:flex;justify-content:space-between;align-items:center"><div><strong>${escapeHtml(f.name)}</strong></div><div><button class="ghost" onclick="goToShop('${f.shopId}')">View in shop</button></div></div>`;
    el.appendChild(c);
  });
}

function renderCart(){
  const el = document.getElementById('cartItems'); el.innerHTML = '';
  if(state.cart.length === 0){ el.innerHTML = '<div class="card">Cart is empty</div>'; document.getElementById('cartTotal').innerText = 0; return; }
  let total = 0;
  state.cart.forEach((c, idx)=>{
    const row = document.createElement('div'); row.className='card'; row.style.display='flex'; row.style.justifyContent='space-between'; row.style.alignItems='center'; row.style.marginBottom='6px';
    row.innerHTML = `<div>${escapeHtml(c.name)} x ${c.qty}</div><div>${c.price * c.qty} KES <button class="ghost" onclick="removeCartItem(${idx})">Remove</button></div>`;
    el.appendChild(row);
    total += c.price * c.qty;
  });
  document.getElementById('cartTotal').innerText = total;
}

function renderCartCount(){
  const cnt = state.cart.reduce((s,i)=>s+i.qty,0);
  document.getElementById('cartCount').innerText = cnt;
}

/* ============= ACTIONS ============= */
function toggleDetails(id){
  const el = document.getElementById('details-' + id);
  if(!el) return;
  el.classList.toggle('hidden');
}

function planRecipe(id, btn){
  if(!state.planned.includes(id)) state.planned.push(id);
  saveState();
  blink(btn);
}

function sendRecipeWhatsApp(id, btn){
  const r = recipes.find(x=>x.id===id); if(!r) return;
  const lines = [];
  lines.push(`Hello! I want to cook *${r.title}* (${r.minutes ? r.minutes + ' min' : '—'}).`);
  lines.push('');
  lines.push('Ingredients:');
  r.ingredients.forEach(i => lines.push(`- ${i.name}`));
  lines.push('');
  lines.push('Steps:');
  r.steps.slice(0,6).forEach((s,i)=> lines.push(`${i+1}. ${s}`));
  blink(btn);
  window.open(`https://wa.me/${CONFIG.PHONE}?text=${encodeURIComponent(lines.join('\n'))}`, '_blank');
}

function addRecipeIngredientsToCart(id){
  const r = recipes.find(x=>x.id===id); if(!r) return;
  r.ingredients.forEach(i=>{
    if(i.shopId){
      const s = findShopById(i.shopId);
      if(s){
        const existing = state.cart.find(c=>c.id === s.id);
        if(existing) existing.qty++;
        else state.cart.push({ id: s.id, name: s.name, price: s.price, qty: 1 });
      }
    }
  });
  saveState();
  renderCart();
}

function addToFridge(name, shopId){
  if(!state.fridge.find(f=>f.name===name && f.shopId===shopId)) state.fridge.push({ name, shopId });
  saveState();
  switchTab('shop');
  setTimeout(()=> {
    const el = document.getElementById('shop-' + shopId);
    if(el){
      el.style.boxShadow = '0 8px 30px rgba(255,107,53,.18)';
      el.scrollIntoView({ behavior: 'smooth', block: 'center' });
      setTimeout(()=> el.style.boxShadow='', 900);
    }
  }, 300);
}

function goToShop(shopId){
  switchTab('shop');
  setTimeout(()=> {
    const el = document.getElementById('shop-' + shopId);
    if(el) el.scrollIntoView({ behavior: 'smooth', block: 'center' });
  }, 200);
}

function addShopToCart(shopId, btn){
  const s = findShopById(shopId); if(!s) return;
  const existing = state.cart.find(c => c.id === s.id);
  if(existing) existing.qty++;
  else state.cart.push({ id: s.id, name: s.name, price: s.price, qty: 1 });
  saveState();
  blink(btn);
}

function removeCartItem(index){
  state.cart.splice(index,1);
  saveState(); renderCart();
}

document.getElementById('clearCart')?.addEventListener('click', ()=>{
  if(!confirm('Clear cart?')) return;
  state.cart = []; saveState(); renderCart();
});

/* ============= GAS helpers ============= */
function updateGasEstimate(){
  const qty = Number(document.getElementById('gasQty')?.value || 1);
  const price = Number(state.tokenPrice || CONFIG.TOKEN_PRICE);
  document.getElementById('gasTotal').innerText = (qty * price);
  document.getElementById('tokenPrice').innerText = price;
}

document.getElementById('addGas')?.addEventListener('click', ()=>{
  const qty = Number(document.getElementById('gasQty').value) || 1;
  const id = 'gas-token';
  const price = Number(state.tokenPrice || CONFIG.TOKEN_PRICE);
  const existing = state.cart.find(c => c.id === id);
  if(existing) existing.qty += qty;
  else state.cart.push({ id: id, name: `Gas tokens`, price: price, qty: qty });
  saveState();
  blink(document.getElementById('addGas'));
});

document.getElementById('gasQty')?.addEventListener('input', updateGasEstimate);

/* ============= CART & WHATSAPP ============= */
function toggleCartPanel(){
  const panel = document.getElementById('cartPanel');
  panel.style.display = panel.style.display === 'none' || panel.style.display === '' ? 'block' : 'none';
}

function sendCartWhatsApp(){
  if(state.cart.length === 0){ alert('Cart is empty'); return; }
  let lines = [];
  lines.push('Hello! I want to place an order from Unico Kitchen:');
  lines.push('');
  let total = 0;
  state.cart.forEach(item => {
    lines.push(`${item.name} x ${item.qty} — KES ${item.price * item.qty}`);
    total += item.price * item.qty;
  });
  lines.push('');
  lines.push(`Total: KES ${total}`);
  window.open(`https://wa.me/${CONFIG.PHONE}?text=${encodeURIComponent(lines.join('\n'))}`, '_blank');
}

function sendPlannedWhatsApp(){
  if(!state.planned || state.planned.length === 0){ alert('No planned recipes'); return; }
  let lines = ['Hello! I want to plan these recipes:',''];
  state.planned.forEach(id => {
    const r = recipes.find(x=>x.id === id);
    if(!r) return;
    lines.push(`*${r.title}* — ${r.minutes ? r.minutes + ' min' : '—'}`);
    r.ingredients.forEach(i => lines.push(`- ${i.name}`));
    lines.push('');
  });
  window.open(`https://wa.me/${CONFIG.PHONE}?text=${encodeURIComponent(lines.join('\n'))}`, '_blank');
}

/* ============= TAB SWITCHING ============= */
function switchTab(tabName){
  document.querySelectorAll('[data-tab]').forEach(t => t.classList.toggle('active', t.dataset.tab === tabName));
  document.querySelectorAll('.tab-panel').forEach(p => p.classList.add('hidden'));
  const panel = document.getElementById(tabName);
  if(panel) panel.classList.remove('hidden');
}
document.querySelectorAll('.tab').forEach(t => t.addEventListener('click', ()=> switchTab(t.dataset.tab)));

/* ============= HOOKS ============= */
document.getElementById('openCartBtn')?.addEventListener('click', toggleCartPanel);
document.getElementById('sendCart')?.addEventListener('click', sendCartWhatsApp);
document.getElementById('sendOrderHeader')?.addEventListener('click', sendCartWhatsApp);
document.getElementById('sendPlanHeader')?.addEventListener('click', sendPlannedWhatsApp);

/* ============= INIT ============= */
function init(){
  renderRecipes();
  renderShop();
  renderFridge();
  renderCart();
  renderCartCount();
  updateGasEstimate();
  document.getElementById('cartPanel').style.display = 'none';
}
init();

/* ============= END ============= */
</script>
</body>
</html>
